1. Exercise Machine Tracking
Users can input workout details like distance and time for different exercise machines. Each machine has its own input fields, styled for consistency, and a button to save the data.
<div class="machine" id="treadmill">
    <h3>Treadmill</h3>
    <label for="distance">Distance (km):</label>
    <input type="number" id="distance" placeholder="Enter distance">
    <label for="time">Time (min):</label>
    <input type="number" id="time" placeholder="Enter time">
    <button onclick="saveWorkout('Treadmill')">Save</button>
</div>
The layout is responsive, with two machines displayed per row to ensure a user-friendly design on different screen sizes.

2. Responsive Layout
The frontend adjusts to different screen sizes, displaying two exercise machines per row. This ensures the app remains accessible on all devices.
.machine-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

.machine {
    width: 45%; /* Two machines per row */
    margin-bottom: 20px;
}
3. Animations
To create a dynamic and modern user interface, animations are added to elements such as machine cards and text that appear while scrolling. For example, the machine cards animate on hover to give users feedback.
.machine {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    opacity: 0;
    animation: fadeInUp 1s forwards;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
4. BMI Calculator
A simple form allows users to input their weight and height, which automatically calculates their Body Mass Index (BMI).
<div class="bmi-calculator">
    <label for="weight">Weight (kg):</label>
    <input type="number" id="weight" oninput="calculateBMI()">
    <label for="height">Height (m):</label>
    <input type="number" id="height" oninput="calculateBMI()">
    <p id="bmi-result">Your BMI: </p>
</div>
function calculateBMI() {
    const weight = document.getElementById('weight').value;
    const height = document.getElementById('height').value;
    if (weight && height) {
        const bmi = (weight / (height * height)).toFixed(2);
        document.getElementById('bmi-result').textContent = `Your BMI: ${bmi}`;
    }
}
5. User Profile Page
The profile page allows users to enter and update their personal information like name, age, and weight. This data is stored and displayed for reference.
<div class="profile">
    <h3>User Profile</h3>
    <label for="name">Name:</label>
    <input type="text" id="name" placeholder="Enter your name">
    <label for="age">Age:</label>
    <input type="number" id="age" placeholder="Enter your age">
    <label for="weight">Weight (kg):</label>
    <input type="number" id="profile-weight" placeholder="Enter your weight">
</div>
6. Workout History Page
A history page shows past workouts, allowing users to track their progress based on the exercises theyâ€™ve logged. The data is displayed dynamically and can be styled accordingly.
<div class="history">
    <h3>Workout History</h3>
    <ul id="workout-history">
        <!-- Workout data will be populated here -->
    </ul>
</div>
7. Stylized Navigation Bar
The navigation bar contains links to different pages, evenly spaced with white text for easy navigation. The navigation elements are animated for a modern look.
<header>
    <h1>Gym Tracker</h1>
    <nav>
        <a href="history.html">History</a>
        <a href="profile.html">Profile</a>
        <a href="index.html">Home</a>
    </nav>
</header>
nav a {
    color: white;
    padding: 15px;
    text-decoration: none;
    font-size: 1.2rem;
    transition: color 0.3s ease;
}

nav a:hover {
    color: #f0f0f0;
}

